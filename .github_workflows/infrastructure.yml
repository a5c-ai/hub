name: Infrastructure Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

jobs:
  terraform:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
      discussions: write
      packages: write
      pages: write
      repository-projects: write
      security-events: write
      statuses: write
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'development' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ~1.5

    - name: Azure CLI login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      env:
        TF_VAR_environment: ${{ github.event.inputs.environment || 'development' }}
      run: |
        cd terraform/environments/${{ github.event.inputs.environment || 'development' }}
        cat > backend.conf <<EOF
        resource_group_name  = "${{ secrets.TFSTATE_RESOURCE_GROUP_NAME }}"
        storage_account_name = "${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}"
        container_name       = "${{ secrets.TFSTATE_CONTAINER_NAME }}"
        key                  = "${{ github.event.inputs.environment || 'development' }}.terraform.tfstate"
        EOF
        terraform init -backend-config=backend.conf

    - name: Terraform Validate
      env:
        TF_VAR_environment: ${{ github.event.inputs.environment || 'development' }}
      run: |
        cd terraform/environments/${{ github.event.inputs.environment || 'development' }}
        terraform validate

    - name: Terraform Plan
      env:
        TF_VAR_environment: ${{ github.event.inputs.environment || 'development' }}
      run: |
        cd terraform/environments/${{ github.event.inputs.environment || 'development' }}
        terraform plan -out=tfplan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      env:
        TF_VAR_environment: ${{ github.event.inputs.environment || 'development' }}
      run: |
        cd terraform/environments/${{ github.event.inputs.environment || 'development' }}
        terraform apply -auto-approve tfplan
