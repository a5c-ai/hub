name: Deploy Application

on:
  workflow_run:
    workflows: ["Build and Package"]
    types:
      - completed
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Azure CLI login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Get AKS credentials
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
      run: |
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
        
    - name: Create namespace if not exists
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
      run: |
        kubectl create namespace hub-${ENVIRONMENT} --dry-run=client -o yaml | kubectl apply -f -
        
    - name: Apply Kubernetes manifests
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update image tags in manifests
        sed -i "s|ghcr.io/a5c-ai/hub-backend:.*|ghcr.io/a5c-ai/hub-backend:main-${IMAGE_TAG}|g" k8s/backend-deployment.yaml
        sed -i "s|ghcr.io/a5c-ai/hub-frontend:.*|ghcr.io/a5c-ai/hub-frontend:main-${IMAGE_TAG}|g" k8s/frontend-deployment.yaml
        
        # Apply all manifests
        kubectl apply -f k8s/ -n hub-${ENVIRONMENT}
        
    - name: Wait for deployment
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
      run: |
        kubectl rollout status deployment/hub-backend -n hub-${ENVIRONMENT} --timeout=600s
        kubectl rollout status deployment/hub-frontend -n hub-${ENVIRONMENT} --timeout=600s
        
    - name: Run health checks
      env:
        ENVIRONMENT: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
      run: |
        # Get service external IP
        echo "Waiting for services to be ready..."
        kubectl wait --for=condition=ready pod -l app=hub-backend -n hub-${ENVIRONMENT} --timeout=300s
        kubectl wait --for=condition=ready pod -l app=hub-frontend -n hub-${ENVIRONMENT} --timeout=300s
        
        # Basic health check
        kubectl get pods -n hub-${ENVIRONMENT}
        kubectl get services -n hub-${ENVIRONMENT}