name: Integration Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'tests/integration/**'
      - 'docker-compose.yml'

jobs:
  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: hub
          POSTGRES_USER: hub
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U hub"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
          xpack.security.enrollment.enabled: "false"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        ports:
          - 9200:9200
          - 9300:9300
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Wait for services to be healthy
        run: |
          echo "Waiting for PostgreSQL and Elasticsearch to be healthy"
          sleep 15
      - name: Run integration tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: hub
          DB_PASSWORD: password
          DB_NAME: hub
          ES_URL: http://localhost:9200
          API_BASE_URL: http://localhost:8080
        run: go test -timeout 30m -tags=integration ./tests/integration/...
